Choose the hardware:
Reiner CyberJack RFID basis for student card (MIFARE contactless smart cards)
RFID-RC522 for RFID Tags on Raspberry Pi Boards
Raspbery Pi Board
Anker USB charger to avoid "under voltage" problem

Choose language: Python for Raspberry Pi and Django web framework 

Installation Raspbian: Graphic Interface 
sudo apt-get install lxde-core xserver-xorg xinit

fix a bug with a Raspbian's pre-installed window manager that automatically closes
sudo apt-get install --reinstall pcmanfm

===========

Installation CyberJack RFID basis
Ich habe den cyberJack RFID basis erfolgreich am Raspberry Pi 3 B mit Raspbian Jessie Lite zum Laufen gebraucht. Es war lediglich nötig, den PC/SC Daemon zu installieren:

https://de.wikipedia.org/wiki/Chipkartenleser (about PC/SC  fot thesis)
sudo apt-get install pcscd
sudo apt-get install libpcsclite-dev
sudo apt-get install libusb-1.0-0-dev

Quellcode
Finden Sie Ihre Distribution oben nicht aufgeführt, können wir dafür aktuell keine vorkompilierten Pakete anbieten. 
Sie können den zugehörigen Quellcode aber selbst kompilieren.
V 1.4.0 -->  ccid_1.4.0.tar.gz
unpack: tar -xzf ccid_1.4.0.tar.gz 
./configure (screenshot)
make (screenshot)
sudo make install

lsusb, um Gerät VendorId und ProductID zu lesen (screenshot)

edit file /usr/lib/pcsc/drivers/ifd-ccid.bundle/Contents/info.plist:
write VendorId, productID and product name in corresponding parts of XML-file

_______________
Jan 27:
RFID Reader can not read the Smart Cars and 2 types of RFID Tags that was ordered in order
to mark the Raspberry Boards.
Solutiuon: Change the hardware and use the ACR122U USB NFC Reader 
Installation steps:
https://oneguyoneblog.com/2015/09/16/acr122u-nfc-usb-reader-raspberry-pi/
Warning for myself: it was enough to make only steps for previous reader. 
No need to add vendorID and deviceID, this can be skipped in the thesis

______________
Card presentation:
https://cedric.cnam.fr/~bouzefra/cours/Cartes_Intro_Anglais.pdf

Starting service and scanning the reader state:
sudo pcscd
pcsc_scan

making screenshot on raspberry
scrot -cd 5 screenshot.png

Code inspiration:
https://github.com/fablab-ka/scardreader

Python packages:
https://pyscard.sourceforge.io/
sudo apt-get install gcc swig
Installation guiude: https://github.com/LudovicRousseau/pyscard/blob/master/INSTALL.md

http://python-pcsclite.sourceforge.net/doc/html/

BOOK
https://books.google.de/books?id=jL0IBgAAQBAJ&pg=PA287&lpg=PA287&dq=DF_TELECOM+card&source=bl&ots=WoTxBtoMqw&sig=ACfU3U2uJq9jlLddQuNBk6KKUc0wUoSIEw&hl=en&sa=X&ved=2ahUKEwjZsc2w2K3nAhULuqQKHa7RD8cQ6AEwBXoECAoQAQ#v=onepage&q=DF_TELECOM%20card&f=false
http://www.ttfn.net/techno/smartcards/iso7816_4.html
APDU list https://web.archive.org/web/20090630004017/http://cheef.ru/docs/HowTo/APDU.info



----------------

Feb 15
Database Design
Board problem: tracking of 2 types of boards

https://www.vertabelo.com/blog/inheritance-in-a-relational-database/

One table implementation:
In this implementation:

Access to supertype rows is optimal (it is simple to have a list of all clients, it’s not necessary to make costly joins)
Effectiveness problem with access to subtype rows. Some rows have to be discarded, because one table contains rows for all (in this case two) subtypes.
There has to be an additional attribute to specify the subtype (attribute ‘type’ may have value ‘i’ for ‘individual’ and ‘c’ for ‘company’ and no other value).
It's easy to change the object’s subtype (we have to change ‘type’ from ‘i’ to ‘c’ or the other way around).
Many attributes are subtype-specific, and these columns have null values on rows that apply to other subtype’s attributes.
