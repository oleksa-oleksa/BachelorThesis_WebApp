Choose the hardware:
Reiner CyberJack RFID basis for student card (MIFARE contactless smart cards)
RFID-RC522 for RFID Tags on Raspberry Pi Boards
Raspbery Pi Board
Anker USB charger to avoid "under voltage" problem

Choose language: Python for Raspberry Pi and Django web framework 

Installation Raspbian: Graphic Interface 
sudo apt-get install lxde-core xserver-xorg xinit

fix a bug with a Raspbian's pre-installed window manager that automatically closes
sudo apt-get install --reinstall pcmanfm

===========

Installation CyberJack RFID basis
Ich habe den cyberJack RFID basis erfolgreich am Raspberry Pi 3 B mit Raspbian Jessie Lite zum Laufen gebraucht. Es war lediglich nötig, den PC/SC Daemon zu installieren:

https://de.wikipedia.org/wiki/Chipkartenleser (about PC/SC  fot thesis)
sudo apt-get install pcscd
sudo apt-get install libpcsclite-dev
sudo apt-get install libusb-1.0-0-dev

Quellcode
Finden Sie Ihre Distribution oben nicht aufgeführt, können wir dafür aktuell keine vorkompilierten Pakete anbieten. 
Sie können den zugehörigen Quellcode aber selbst kompilieren.
V 1.4.0 -->  ccid_1.4.0.tar.gz
unpack: tar -xzf ccid_1.4.0.tar.gz 
./configure (screenshot)
make (screenshot)
sudo make install

lsusb, um Gerät VendorId und ProductID zu lesen (screenshot)

edit file /usr/lib/pcsc/drivers/ifd-ccid.bundle/Contents/info.plist:
write VendorId, productID and product name in corresponding parts of XML-file

_______________
Jan 27:
RFID Reader can not read the Smart Cars and 2 types of RFID Tags that was ordered in order
to mark the Raspberry Boards.
Solution: Change the hardware and use the ACR122U USB NFC Reader 
Installation steps:
https://oneguyoneblog.com/2015/09/16/acr122u-nfc-usb-reader-raspberry-pi/
Warning for myself: it was enough to make only steps for previous reader. 
No need to add vendorID and deviceID, this can be skipped in the thesis

______________
Card presentation:
https://cedric.cnam.fr/~bouzefra/cours/Cartes_Intro_Anglais.pdf

Starting service and scanning the reader state:
sudo pcscd
pcsc_scan

making screenshot on raspberry
scrot -cd 5 screenshot.png

Code inspiration:
https://github.com/fablab-ka/scardreader

Python packages:
https://pyscard.sourceforge.io/
sudo apt-get install gcc swig
Installation guiude: https://github.com/LudovicRousseau/pyscard/blob/master/INSTALL.md

http://python-pcsclite.sourceforge.net/doc/html/

BOOK
https://books.google.de/books?id=jL0IBgAAQBAJ&pg=PA287&lpg=PA287&dq=DF_TELECOM+card&source=bl&ots=WoTxBtoMqw&sig=ACfU3U2uJq9jlLddQuNBk6KKUc0wUoSIEw&hl=en&sa=X&ved=2ahUKEwjZsc2w2K3nAhULuqQKHa7RD8cQ6AEwBXoECAoQAQ#v=onepage&q=DF_TELECOM%20card&f=false
http://www.ttfn.net/techno/smartcards/iso7816_4.html
APDU list https://web.archive.org/web/20090630004017/http://cheef.ru/docs/HowTo/APDU.info



----------------

Feb 15
Database Design
Board problem: tracking of 2 types of boards

https://www.vertabelo.com/blog/inheritance-in-a-relational-database/

One table implementation:
In this implementation:

Access to supertype rows is optimal (it is simple to have a list of all clients, it’s not necessary to make costly joins)
Effectiveness problem with access to subtype rows. Some rows have to be discarded, because one table contains rows for all (in this case two) subtypes.
There has to be an additional attribute to specify the subtype (attribute ‘type’ may have value ‘i’ for ‘individual’ and ‘c’ for ‘company’ and no other value).
It's easy to change the object’s subtype (we have to change ‘type’ from ‘i’ to ‘c’ or the other way around).
Many attributes are subtype-specific, and these columns have null values on rows that apply to other subtype’s attributes.



-----------------
Mar 12
Coronavirus, working from home instead of visiting University

Anyway, today I'll do a script for the initial registration of the student card
Suppose we will have the list of registered student before the first exercise session: it as obligatory to register on Moodle System. Thus admin can create a first database records for the Student table.
On the first exercise the Python script will be executed by the admin on their Mac or windows computer and the UIDs of the card will be read with manually added matriculation number.
An admin the will upload the txt-file to the Django admin from their computer and the file will be parsed and the UIDs of the student will be linked with their record created before.

Download drivers: https://www.acs.com.hk/en/driver/3/acr122u-usb-nfc-reader/ 

https://simpleisbetterthancomplex.com/tutorial/2016/08/01/how-to-upload-files-with-django.html

____________________

Mar 16
Coronaviris in Berlin
All kindergarten are closed, so I am writing a bachelor thesis at home being accompanied
by my 1,5 years kid. My husband also has home office.
Today the first index page were created using html+css

Time to show some data from database:
https://djangobook.com/mdj2-models/

-----------

Mar 19
https://kite.com/python/docs/django.contrib.admindocs.views.staff_member_required
Using staff_member_required decorator.
Upload and parse txt file, add record into database

-------
Mar 22
Upload csv-file using model form
https://docs.djangoproject.com/en/3.0/ref/csrf/

---- 
Mar 23
Icon for admin page: https://icons8.de/icon/54088/raspberry-pi

--- 
Mar 24
Django forms explained
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Forms

____
13 Apr:
Sessions Api:
Endpoints .../api/sessions => "sessions" is the name of the resource
using json

start buttons: empty request, user is undefined => POST api/sessions {}
draw "scan your card" page
response: {session_id, state} 200

GET api/sessions/session_id
response: {session_id, state} 200 or 404 or 440 HTTP status code for session expired

----
18 Apr
Model Validation for Session
https://docs.djangoproject.com/en/dev/ref/models/instances/#validating-objects

----
19 Apr
FSM with Python https://github.com/viewflow/django-fsm
Encapsulation for reader client
Set and Get Environment Variables in Python for Client Api URL